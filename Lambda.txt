2020.02.14

서버리스컴퓨팅
관리 목표는 관리 대상의 제거
서버에 대한 고민 없이 애플리케이션을 구축 및 작동

장점
1. 서버 준비나 관리 불필요
2. 미실행시 과금 안함
3. 사용량 기반 자동 확장
4. 가용성 및 장애 방지

서버리스 아키텍쳐 패턴(웹어플리케이션)
1. Amazon S3에 HTML, CSS, JS, 이미지 등의 정적 콘텐츠를
제공하고, 이를 CloudFront와 같은 CDN서비스로 사용자에게 제공
2. HTML에서 REST API 요청시, 사용자 인증 및 권한 확인 및 
DDos 방어 등의 기능 수행 후 ASW Lambda에 이벤트 호출
3. Lambda 함수가 비즈니스 로직을 수행 하고, 데이터베이스 및
다른 백엔드 서비스를 연경하여 필요한 기능 수행

Lambda
서버리스, 이벤트 처리 방식의 컴퓨팅 서비스

동작 원리
1. 코드 등록
2. 트리거
3. 실행
4. 사용요금

함수 구조
Handler() 함수
호출(invocation)시 실행될 함수

이벤트 오브젝트
Lambda 함수 호출시 전달되는 데이타
(1st 전달 인자)

컨텍스트 오브젝트
Lambda 함수 호출시 전달되는 데이타
(2nd 전달 인자)로 AWS Lambda 런타임과
상호작용하는 Method 제공
(request ID, log group 등)

exports.handler = (event, context, callback) => {
    callback(null, {
        statusCode: 200,
        body: 'Hello from Lambda'
    });
};

함수의 라이프사이클
1. 코드 다운로드 
2. Language runtime을 시작 
3. 코드 적재 (예, Java에서의 class loading) 
4. “init” 코드 실행 (예, Java에서의 static initializers) 
5. 요청 처리